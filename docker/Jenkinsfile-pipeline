#! /usr/bin/groovy

def AGENT_LABEL = 'mr-0xc10'
def DOCKER_FILE_PATH = 'docker/Dockerfile'
def DOCKER_RUN_ARGS = "-v h2o-3:/h2o-3/ -v docker_home:/docker_home/"

def make_target(def target) {
  sh """
    export JAVA_HOME=/usr/lib/jvm/java-${params.javaVersion}-oracle
    export HOME=docker_home
    . /envs/h2o_env_python${params.pythonVersion}/bin/activate
    activate_R_${params.rVersion}
    make -f Makefile.jenkins ${target}
  """
}

pipeline {

    agent none

    parameters {
      string(name: 'gitBranch', defaultValue: 'master', description: 'Branch to load the Dockerfile from.')
      choice(name: 'rVersion', description: 'R version to use', choices: '3.4.1\n3.3.3\n3.2.5\n3.1.3\n3.0.3')
      choice(name: 'pythonVersion', description: 'Python version to use', choices: '3.5\n2.7')
      choice(name: 'javaVersion', description: 'Java version to use', choices: '8')
    }

    environment {
        H2O_GIT_URL = 'https://github.com/h2oai/h2o-3.git'
    }

    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 2, unit: 'HOURS')
    }

    stages {
        stage ('Checkout Sources') {
            agent { label AGENT_LABEL }

            steps {
              dir('h2o-3') {
                git url: env.H2O_GIT_URL, branch: params.gitBranch
                sh """
                  rm -f small
                  ln -s -f /home/0xdiag/smalldata
                  rm -f bigdata
                  ln -s -f /home/0xdiag/bigdata
                """
              }
              sh "mkdir -p docker_home"
            }
        }

        stage ('Build H2O-3') {
          agent {
            docker {
              label AGENT_LABEL
              image 'docker.h2o.ai/opsh2oai/mr-h2o3-runtime:latest'
              args DOCKER_RUN_ARGS
              reuseNode true
            }
          }
          steps {
            script {
              make_target('build-h2o-3')
            }
          }
        }

        stage ('Test PhantomJS') {
          agent {
            docker {
              label AGENT_LABEL
              image 'docker.h2o.ai/opsh2oai/mr-h2o3-runtime:latest'
              args DOCKER_RUN_ARGS
              reuseNode true
            }
          }
          steps {
            script {
              make_target('test-phantomjs')
            }
          }
        }
    }

    // post {
    //     failure {
    //         emailext (
    //               subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
    //               body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    //                 <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
    //               to: "michalr@h2o.ai"
    //         )
    //     }
    // }
}
