#! /usr/bin/groovy

def AGENT_LABEL = 'mr-0xc10'
def DOCKER_FILE_PATH = 'docker/Dockerfile'

pipeline {

    agent { label AGENT_LABEL }

    parameters {
      string(name: 'gitBranch', defaultValue: 'mr/feature/h2o3-runtime-docker', description: 'Branch to load the Dockerfile from.')
      booleanParam(name: 'publishDockerImage', defaultValue: true, description: 'If true, publish the docker image')

    }

    environment {
        H2O_GIT_URL = 'https://github.com/h2oai/h2o-3.git'
    }

    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 2, unit: 'HOURS')
    }

    stages {
        stage ('Checkout Sources') {
            steps {
                git url: env.H2O_GIT_URL, branch: params.gitBranch
            }
        }

        stage ('Build Docker Image') {
          steps {
            sh """
                cd docker
                docker build -t mr-h2o3-runtime .
            """
          }
        }

        stage ('Publich Docker Image') {
          when {
            expression { params.publishDockerImage }
          }
          steps {
            sh """
                docker login -u h2oai -p h2oai docker.h2o.ai
                docker tag mr-h2o3-runtime:latest docker.h2o.ai/opsh2oai/mr-h2o3-runtime:latest
                docker push docker.h2o.ai/opsh2oai/mr-h2o3-runtime:latest
            """
          }
        }
    }

    post {
        failure {
            emailext (
                  subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                  body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                    <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
                  to: "michalr@h2o.ai"
            )
        }
    }
}
